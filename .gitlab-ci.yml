variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - check
  - deploy

before_script:
    - security unlock-keychain -p ${DEFAULT_KEYCHAIN_PASSWORD} ~/Library/Keychains/login.keychain-db
    - poetry install

check/deployed-native:
  stage: check
  when: manual
  except:
    - tags
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=deployed
  tags:
    - macos

check/native-from-sources:
  stage: check
  when: manual
  except:
    - tags
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch
  tags:
    - macos

nightly:
  stage: check
  only:
    - schedules
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch
  tags:
    - macos

downstream/check:
  stage: check
  tags:
    - macos
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'pipeline'"
      when: manual
  script:
    - poetry run python run-ci.py reset-branch $UPSTREAM_BRANCH_NAME
    - poetry run python run-ci.py download-artifacts --project-id=$UPSTREAM_PROJECT_ID --pipeline-id=$UPSTREAM_PIPELINE_ID --job-name=$UPSTREAM_JOB_NAME
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=upstream

deploy:
  stage: deploy
  when: manual
  only:
    - tags
  script:
    - GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gitlab.json poetry run python run-ci.py --isolate-conan-user-home deploy --git-tag ${CI_COMMIT_TAG}
  tags:
    - macos

mirror:
  tags:
    - macos
  stage: deploy
  only:
    # mirror public tags, releases branches,
    # feature branches, and master
    - /\Av[0-9.]+\z/
    - master
    - /\Arelease/.*\z/
    - /\Afeat\/.+\z/
  except:
    - schedules
  script:
    - poetry run python run-ci.py mirror
