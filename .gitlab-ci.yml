variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - check
  - deploy

before_script:
    - security unlock-keychain -p ${DEFAULT_KEYCHAIN_PASSWORD} ~/Library/Keychains/login.keychain-db
    - poetry install

check/deployed-native:
  stage: check
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=deployed
  tags:
    - macos

check/native-from-sources:
  stage: check
  rules:
    - if: $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch
  tags:
    - macos

nightly:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch
  tags:
    - macos

downstream/check:
  stage: check
  tags:
    - macos
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
  script:
    - poetry run python run-ci.py reset-branch $UPSTREAM_BRANCH_NAME
    - poetry run python run-ci.py download-artifacts --project-id=$UPSTREAM_PROJECT_ID --pipeline-id=$UPSTREAM_PIPELINE_ID --job-name=$UPSTREAM_JOB_NAME
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=upstream --only-macos-archs

deploy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
  script:
    - GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gitlab.json poetry run python run-ci.py --isolate-conan-user-home deploy --git-tag ${CI_COMMIT_TAG}
  tags:
    - macos

mirror:
  tags:
    - macos
  stage: deploy
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /\Av[0-9.]+\z/
    - if: $CI_COMMIT_REF_NAME =~ /\Arelease\/.*\z/
    - if: $CI_COMMIT_REF_NAME =~ /\Afeat\/.+\z/
    - if: $CI_COMMIT_REF_NAME == "master"

  script:
    - poetry run python run-ci.py mirror

